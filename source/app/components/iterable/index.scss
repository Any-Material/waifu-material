#iterable {
	display: grid;
	margin: 15px;
	grid-gap: 15px;
	grid-auto-rows: 475px;
	grid-template-columns: repeat(auto-fit, minmax(360px, auto));
	> #gallery {
		display: grid;
		grid-template-areas:
		"upper"
		"lower";
		grid-template-rows: 1fr 45px;
		grid-template-columns: 1fr;
		background-color: var(--colour_3);
		transition: border-color var(--transition), background-color var(--transition);
		> * {
			overflow: hidden;
		}
		> #upper {
			position: relative;
			grid-area: upper;
			margin: 10px 10px 0px 10px;
			transition: border-color var(--transition);
			> * {
				position: absolute;
				width: 100%;
				height: 100%;
				bottom: 0px;
				background-color: var(--colour_4);
				&.fluid {
					will-change: transform;
				}
			}
			> img {
				height: 100%;
				opacity: 50%;
				object-fit: cover;
				transition: visibility 500ms, opacity var(--transition);
				will-change: visibility, opacity;
				&.censored {
					filter: blur(10px);
				}
			}
			> #discovery {
				position: relative;
				color: var(--colour_5);
				background-color: var(--colour_2);
				transition: transform 500ms;
				> #interacts {
					position: absolute;
					overflow: hidden;
					right: 0px;
					width: 50px;
					height: 50px;
					> #triangle {
						// @see https://stackoverflow.com/questions/29758522/make-only-triangle-have-hover-effect-using-css
						position: absolute;
						// 71: sqrt((100^2)/2)
						width: 71px;
						height: 71px;
						// 29: 100 - 71
						bottom: 29px;
						background-color: var(--colour_1);
						transform: rotate(45deg) translateX(29%);
						transition: border-color var(--transition), background-color var(--transition);
						&:hover {
							border-color: var(--colour_9);
							background-color: var(--colour_success);
						}
					}
				}
				> #scrollable {
					height: 100%;
					> #bundle {
						margin: 5px 10px;
						font-size: 15px;
						font-weight: bold;
						> #key {
							display: inline-flex;
							flex-direction: row;
							font-size: 12.5px;
							max-width: 35ch;
							height: 25px;
							margin: 5px;
							padding: 0px 5px;
							background-color: var(--colour_3);
							transition: border-color var(--transition), background-color var(--transition);
							> #value {
								color: var(--colour_1);
							}
							&:hover {
								border-color: var(--colour_9);
								background-color: var(--colour_5);
							}
						}
					}
					&::-webkit-scrollbar {
						display: none;
					}
				}
			}
			> #interacts {
				height: 45px;
				border-left-width: 0px;
				border-right-width: 0px;
				border-bottom-width: 0px;
				transform: translateY(100%);
				transition: border-color var(--transition), transform var(--transition);
				> * {
					width: 45px;
					height: 100%;
					&:hover {
						background-color: var(--colour_3);
					}
					> svg {
						width: 20px;
						height: 20px;
					}
				}
			}
			&[data-html="0"] {
				> #discovery {
					transform: translateY(100%);
				}
			}
			&[data-html="1"] {
				> img {
					visibility: hidden;
				}
				> #interacts {
					transform: translateY(100%);
				}
			}
		}
		> #lower {
			grid-area: lower;
			display: grid;
			grid-template-areas:
			"title id";
			grid-template-rows: 1fr;
			grid-template-columns: 1fr 85px;
			> * {
				font-weight: bold;
			}
			> #title {
				grid-area: title;
				font-size: 15px;
				margin-left: 10px;
				color: var(--colour_9);
			}
			> #id {
				grid-area: id;
				font-size: 12.5px;
				color: var(--colour_1);
			}
		}
		&:hover {
			border-color: var(--colour_9);
			background-color: var(--colour_5);
			> #upper {
				border-color: var(--colour_9);
				&[data-html="0"] {
					> img {
						opacity: 100%;
					}
					> #interacts {
						transform: translateY(0%);
						border-color: var(--colour_9);
					}
				}
			}
		}
	}
}
